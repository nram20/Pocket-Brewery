"use strict";var app=angular.module("beerApp",["ui.router","ui.bootstrap","angularSpinner","ngStorage"]);app.config(["$stateProvider","$urlRouterProvider",function(e,t){e.state("home",{url:"/",templateUrl:"/html/home.html",controller:"homeCtrl"}).state("login",{url:"/login",templateUrl:"/html/login.html",controller:"loginCtrl"}).state("register",{url:"/register",templateUrl:"/html/registration.html",controller:"regCtrl"}).state("profile",{url:"/profile",templateUrl:"/html/profile.html",controller:"profileCtrl"}).state("editProfile",{url:"/editProfile",templateUrl:"/html/editProfile.html",controller:"editProfileCtrl"}).state("myBeers",{url:"/myBeers",templateUrl:"/html/myBeers.html",controller:"myBeersCtrl"}).state("allBeers",{url:"/allBeers",templateUrl:"/html/allBeers.html",controller:"allBeersCtrl"}).state("review",{url:"/review",templateUrl:"/html/review.html",controller:"reviewCtrl"}).state("reviewspecific",{url:"/reviewspecific/:id",templateUrl:"/html/reviewspecific.html",controller:"reviewspecificCtrl"}),t.otherwise("/")}]);var app=angular.module("beerApp");app.controller("mainCtrl",["$scope","User","$state","$sessionStorage",function(e,t,r,o){console.log("mainCtrl"),e.isLoggedIn=!!o.currentUser,e.$watch(function(){return o.currentUser},function(t,r){e.isLoggedIn=!!t}),e.logOut=function(){t.logout().then(function(e){console.log(e),o.currentUser=null,r.go("home")})}}]),app.controller("homeCtrl",["$scope","User","$state",function(e,t,r){console.log("homeCtrl")}]),app.controller("regCtrl",["$scope","User","$state","$timeout",function(e,t,r,o){console.log("regCtrl"),e.registration={},e.success=!1,e.passwordsNotMatch=!1,e.register=function(){if(e.registration.password1!==e.registration.password2)return e.passwordsNotMatch=!0;var o={email:e.registration.email,password:e.registration.password1};e.success=!0,t.signup(o).then(function(e){r.go("login")})}}]),app.controller("loginCtrl",["$scope","User","$state","$sessionStorage",function(e,t,r,o){console.log("loginCtrl"),e.credentials={},e.login=function(){t.login(e.credentials).then(function(){r.go("profile")})}}]),app.controller("profileCtrl",["$scope","User","$state","$sessionStorage",function(e,t,r,o){console.log("profileCtrl"),e.user={},t.getPerson(o.currentUser).then(function(t){e.user=t.data}),e.editProfile=function(){r.go("editProfile")}}]),app.controller("editProfileCtrl",["$scope","User","$state","$sessionStorage",function(e,t,r,o){console.log("editProfileCtrl"),e.editing={},t.getPerson(o.currentUser).then(function(t){e.editing=t.data}),e.cancel=function(){r.go("profile")},e.save=function(){if(e.editing.password1===e.editing.password2){var n;n=void 0!==e.editing.password1?{email:e.editing.email,password:e.editing.password1}:{email:e.editing.email},t.editprofile(n).then(function(e){t.logout().then(function(e){console.log(e),o.currentUser=null,r.go("home")})})}}}]),app.controller("myBeersCtrl",["$scope","User","$state","$sessionStorage","StoreData",function(e,t,r,o,n){console.log("myBeersCtrl"),e.beers={},t.getPerson(o.currentUser).then(function(t){e.beers=t.data.ratings,console.log(e.beers),e.beers=e.beers.filter(function(e){return void 0!==e.score})}),e.deleteRating=function(r){t.deleteRating(r).then(function(r){t.getPerson(o.currentUser).then(function(t){e.beers=t.data.ratings,console.log(e.beers),e.beers=e.beers.filter(function(e){return void 0!==e.score})})})},e.sortBy=function(t){e.sortOrder===t?e.sortOrder="-"+t:e.sortOrder=t},e.editRating=function(e,t,o){n.set({edited:!0,load:{score:t,comment:o}}),r.go("reviewspecific",{id:e})}}]),app.controller("allBeersCtrl",["$scope","User","$state","$sessionStorage",function(e,t,r,o){console.log("allBeersCtrl"),e.notSampled=[],e.startreview=function(){r.go("review")},e.reviewThis=function(e){r.go("reviewspecific",{id:e})},t.getNotSampled().then(function(t){e.notSampled=t.data})}]),app.controller("reviewCtrl",["$scope","User","$state","$sessionStorage","BeerAPI",function(e,t,r,o,n){console.log("reviewCtrl"),e.beer={},e.loading=!0,e.rating={},n.getRandom().then(function(t){e.beer=t.data,e.loading=!1}),e.rate=function(){var r={beerId:e.beer.id,beerName:e.beer.name,score:e.rating.score,comment:e.rating.comment};t.addRating(r).then(function(t){e.loading=!0,n.getRandom().then(function(t){e.beer=t.data,e.loading=!1})})},e.notsampled=function(){console.log("whhaaat");var r={beerId:e.beer.id,beerName:e.beer.name,score:void 0,comment:void 0};t.addRating(r).then(function(t){e.loading=!0,n.getRandom().then(function(t){e.beer=t.data,e.loading=!1})})}}]),app.controller("reviewspecificCtrl",["$scope","User","$state","$sessionStorage","BeerAPI","$stateParams","StoreData",function(e,t,r,o,n,i,s){console.log("reviewspecificCtrl"),e.beer={},e.loading=!0,e.rating={},n.getById(i.id).then(function(t){e.beer=t.data,e.loading=!1;var r=s.get();r.edited&&(console.log(r.load.score),e.rating.score=r.load.score,e.rating.comment=r.load.comment)}),e.rate=function(){var o={beerId:e.beer.id,beerName:e.beer.name,score:e.rating.score,comment:e.rating.comment};t.addRatingToSpecific(o.beerId,o).then(function(e){var t=s.get();return t.edited?r.go("myBeers"):void r.go("allBeers")})},e.notsampled=function(){r.go("allBeers")}}]);var app=angular.module("beerApp");app.service("User",["$http","$sessionStorage",function(e,t){this.signup=function(t){return e.post("./api/users/register",t)},this.login=function(r){return e.post("./api/users/login",r).then(function(e){console.log(e),t.currentUser=e.data})},this.logout=function(t){return e["delete"]("./api/users/logout",t)},this.loadprofile=function(){return e.get("./api/users/profile")},this.editprofile=function(t){return e.put("./api/users/profile",t)},this.getPeople=function(){return e.get("./api/users/people")},this.getPerson=function(t){return e.get("./api/users/people/"+t)},this.addRating=function(t){return e.post("./api/users/addRating/",t)},this.deleteRating=function(t){return e["delete"]("./api/users/deleteRating/"+t)},this.addRatingToSpecific=function(t,r){return e.post("./api/users/addRatingToSpecific/"+t,r)},this.getNotSampled=function(){return e.get("./api/users/getNotSampled")}}]),app.service("BeerAPI",["$http",function(e){this.getRandom=function(){return e.get("./api/beers/getRandom")},this.getById=function(t){return e.get("./api/beers/getById/"+t)}}]),app.service("StoreData",function(){var e={};this.get=function(){return e},this.set=function(t){e=t}});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsImNvbnRyb2xsZXJzL2NvbnRyb2xsZXJzLmpzIiwic2VydmljZXMvc2VydmljZXMuanMiXSwibmFtZXMiOlsiYXBwIiwiYW5ndWxhciIsIm1vZHVsZSIsImNvbmZpZyIsIiRzdGF0ZVByb3ZpZGVyIiwiJHVybFJvdXRlclByb3ZpZGVyIiwic3RhdGUiLCJ1cmwiLCJ0ZW1wbGF0ZVVybCIsImNvbnRyb2xsZXIiLCJvdGhlcndpc2UiLCIkc2NvcGUiLCJVc2VyIiwiJHN0YXRlIiwiJHNlc3Npb25TdG9yYWdlIiwiY29uc29sZSIsImxvZyIsImlzTG9nZ2VkSW4iLCJjdXJyZW50VXNlciIsIiR3YXRjaCIsIm5ld1ZhbCIsIm9sZFZhbCIsImxvZ091dCIsImxvZ291dCIsInRoZW4iLCJyZXMiLCJnbyIsIiR0aW1lb3V0IiwicmVnaXN0cmF0aW9uIiwic3VjY2VzcyIsInBhc3N3b3Jkc05vdE1hdGNoIiwicmVnaXN0ZXIiLCJwYXNzd29yZDEiLCJwYXNzd29yZDIiLCJuZXdVc2VyIiwiZW1haWwiLCJwYXNzd29yZCIsInNpZ251cCIsImNyZWRlbnRpYWxzIiwibG9naW4iLCJ1c2VyIiwiZ2V0UGVyc29uIiwiZGF0YSIsImVkaXRQcm9maWxlIiwiZWRpdGluZyIsImNhbmNlbCIsInNhdmUiLCJ1bmRlZmluZWQiLCJlZGl0cHJvZmlsZSIsIlN0b3JlRGF0YSIsImJlZXJzIiwicmF0aW5ncyIsImZpbHRlciIsImJlZXIiLCJzY29yZSIsImRlbGV0ZVJhdGluZyIsImlkIiwic29ydEJ5Iiwib3JkZXIiLCJzb3J0T3JkZXIiLCJlZGl0UmF0aW5nIiwiY29tbWVudCIsInNldCIsImVkaXRlZCIsImxvYWQiLCJub3RTYW1wbGVkIiwic3RhcnRyZXZpZXciLCJyZXZpZXdUaGlzIiwiZ2V0Tm90U2FtcGxlZCIsIkJlZXJBUEkiLCJsb2FkaW5nIiwicmF0aW5nIiwiZ2V0UmFuZG9tIiwicmF0ZSIsInJhdGluZ09iaiIsImJlZXJJZCIsImJlZXJOYW1lIiwibmFtZSIsImFkZFJhdGluZyIsIm5vdHNhbXBsZWQiLCIkc3RhdGVQYXJhbXMiLCJnZXRCeUlkIiwiaW5mbyIsImdldCIsImFkZFJhdGluZ1RvU3BlY2lmaWMiLCJzZXJ2aWNlIiwiJGh0dHAiLCJ0aGlzIiwibmV3VXNlck9iaiIsInBvc3QiLCJsb2dpbkRldGFpbHNPYmoiLCJsb2FkcHJvZmlsZSIsImVkaXRlZFVzZXJPYmoiLCJwdXQiLCJnZXRQZW9wbGUiLCJvYmoiLCJzdG9yZURhdGEiXSwibWFwcGluZ3MiOiJBQUFBLFlBRUEsSUFBQUEsS0FBQUMsUUFBQUMsT0FBQSxXQUFBLFlBQUEsZUFBQSxpQkFBQSxhQUVBRixLQUFBRyxRQUFBLGlCQUFBLHFCQUFBLFNBQUFDLEVBQUFDLEdBRUFELEVBQ0FFLE1BQUEsUUFDQUMsSUFBQSxJQUNBQyxZQUFBLGtCQUNBQyxXQUFBLGFBRUFILE1BQUEsU0FDQUMsSUFBQSxTQUNBQyxZQUFBLG1CQUNBQyxXQUFBLGNBRUFILE1BQUEsWUFDQUMsSUFBQSxZQUNBQyxZQUFBLDBCQUNBQyxXQUFBLFlBRUFILE1BQUEsV0FDQUMsSUFBQSxXQUNBQyxZQUFBLHFCQUNBQyxXQUFBLGdCQUVBSCxNQUFBLGVBQ0FDLElBQUEsZUFDQUMsWUFBQSx5QkFDQUMsV0FBQSxvQkFFQUgsTUFBQSxXQUNBQyxJQUFBLFdBQ0FDLFlBQUEscUJBQ0FDLFdBQUEsZ0JBRUFILE1BQUEsWUFDQUMsSUFBQSxZQUNBQyxZQUFBLHNCQUNBQyxXQUFBLGlCQUVBSCxNQUFBLFVBQ0FDLElBQUEsVUFDQUMsWUFBQSxvQkFDQUMsV0FBQSxlQUVBSCxNQUFBLGtCQUNBQyxJQUFBLHNCQUNBQyxZQUFBLDRCQUNBQyxXQUFBLHVCQUdBSixFQUFBSyxVQUFBLE9DbkRBLElBQUFWLEtBQUFDLFFBQUFDLE9BQUEsVUFFQUYsS0FBQVMsV0FBQSxZQUFBLFNBQUEsT0FBQSxTQUFBLGtCQUFBLFNBQUFFLEVBQUFDLEVBQUFDLEVBQUFDLEdBQ0FDLFFBQUFDLElBQUEsWUFDQUwsRUFBQU0sYUFBQUgsRUFBQUks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QUFBLFNBQUFDLEdBQ0EsTUFBQThCLEdBQUFBLFVBQUEsNEJBQUE5QixJQUdBK0IsS0FBQUgsb0JBQUEsU0FBQVQsRUFBQW9CLEdBQ0EsTUFBQVQsR0FBQUcsS0FBQSxtQ0FBQWQsRUFBQW9CLElBR0FSLEtBQUFuQixjQUFBLFdBQ0EsTUFBQWtCLEdBQUFILElBQUEsaUNBS0FuRixJQUFBcUYsUUFBQSxXQUFBLFFBQUEsU0FBQUMsR0FFQUMsS0FBQWYsVUFBQSxXQUNBLE1BQUFjLEdBQUFILElBQUEsMEJBR0FJLEtBQUFOLFFBQUEsU0FBQXpCLEdBQ0EsTUFBQThCLEdBQUFILElBQUEsdUJBQUEzQixPQUtBeEQsSUFBQXFGLFFBQUEsWUFBQSxXQUNBLEdBQUFXLEtBQ0FULE1BQUFKLElBQUEsV0FBQSxNQUFBYSxJQUNBVCxLQUFBekIsSUFBQSxTQUFBcEIsR0FBQXNELEVBQUF0RCIsImZpbGUiOiJidW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBhcHAgPSBhbmd1bGFyLm1vZHVsZSgnYmVlckFwcCcsIFsndWkucm91dGVyJywgJ3VpLmJvb3RzdHJhcCcsICdhbmd1bGFyU3Bpbm5lcicsICduZ1N0b3JhZ2UnXSk7XG5cbmFwcC5jb25maWcoZnVuY3Rpb24oJHN0YXRlUHJvdmlkZXIsICR1cmxSb3V0ZXJQcm92aWRlcil7XG5cbiAgJHN0YXRlUHJvdmlkZXJcbiAgICAuc3RhdGUoJ2hvbWUnLCB7XG4gICAgICB1cmw6Jy8nLFxuICAgICAgdGVtcGxhdGVVcmw6ICcvaHRtbC9ob21lLmh0bWwnLFxuICAgICAgY29udHJvbGxlcjogJ2hvbWVDdHJsJ1xuICAgIH0pXG4gICAgLnN0YXRlKCdsb2dpbicsIHtcbiAgICAgIHVybDonL2xvZ2luJyxcbiAgICAgIHRlbXBsYXRlVXJsOiAnL2h0bWwvbG9naW4uaHRtbCcsXG4gICAgICBjb250cm9sbGVyOiAnbG9naW5DdHJsJ1xuICAgIH0pXG4gICAgLnN0YXRlKCdyZWdpc3RlcicsIHtcbiAgICAgIHVybDonL3JlZ2lzdGVyJyxcbiAgICAgIHRlbXBsYXRlVXJsOiAnL2h0bWwvcmVnaXN0cmF0aW9uLmh0bWwnLFxuICAgICAgY29udHJvbGxlcjogJ3JlZ0N0cmwnXG4gICAgfSlcbiAgICAuc3RhdGUoJ3Byb2ZpbGUnLCB7XG4gICAgICB1cmw6Jy9wcm9maWxlJyxcbiAgICAgIHRlbXBsYXRlVXJsOiAnL2h0bWwvcHJvZmlsZS5odG1sJyxcbiAgICAgIGNvbnRyb2xsZXI6ICdwcm9maWxlQ3RybCdcbiAgICB9KVxuICAgIC5zdGF0ZSgnZWRpdFByb2ZpbGUnLCB7XG4gICAgICB1cmw6Jy9lZGl0UHJvZmlsZScsXG4gICAgICB0ZW1wbGF0ZVVybDogJy9odG1sL2VkaXRQcm9maWxlLmh0bWwnLFxuICAgICAgY29udHJvbGxlcjogJ2VkaXRQcm9maWxlQ3RybCdcbiAgICB9KVxuICAgIC5zdGF0ZSgnbXlCZWVycycsIHtcbiAgICAgIHVybDonL215QmVlcnMnLFxuICAgICAgdGVtcGxhdGVVcmw6ICcvaHRtbC9teUJlZXJzLmh0bWwnLFxuICAgICAgY29udHJvbGxlcjogJ215QmVlcnNDdHJsJ1xuICAgIH0pXG4gICAgLnN0YXRlKCdhbGxCZWVycycsIHtcbiAgICAgIHVybDonL2FsbEJlZXJzJyxcbiAgICAgIHRlbXBsYXRlVXJsOiAnL2h0bWwvYWxsQmVlcnMuaHRtbCcsXG4gICAgICBjb250cm9sbGVyOiAnYWxsQmVlcnNDdHJsJ1xuICAgIH0pXG4gICAgLnN0YXRlKCdyZXZpZXcnLCB7XG4gICAgICB1cmw6Jy9yZXZpZXcnLFxuICAgICAgdGVtcGxhdGVVcmw6ICcvaHRtbC9yZXZpZXcuaHRtbCcsXG4gICAgICBjb250cm9sbGVyOiAncmV2aWV3Q3RybCdcbiAgICB9KVxuICAgIC5zdGF0ZSgncmV2aWV3c3BlY2lmaWMnLCB7XG4gICAgICB1cmw6Jy9yZXZpZXdzcGVjaWZpYy86aWQnLFxuICAgICAgdGVtcGxhdGVVcmw6ICcvaHRtbC9yZXZpZXdzcGVjaWZpYy5odG1sJyxcbiAgICAgIGNvbnRyb2xsZXI6ICdyZXZpZXdzcGVjaWZpY0N0cmwnXG4gICAgfSlcblxuICAkdXJsUm91dGVyUHJvdmlkZXIub3RoZXJ3aXNlKCcvJyk7XG59KTsiLCIndXNlIHN0cmljdCc7XG5cbnZhciBhcHAgPSBhbmd1bGFyLm1vZHVsZSgnYmVlckFwcCcpO1xuXG5hcHAuY29udHJvbGxlcignbWFpbkN0cmwnLCBmdW5jdGlvbigkc2NvcGUsIFVzZXIsICRzdGF0ZSwgJHNlc3Npb25TdG9yYWdlKSB7XG4gIGNvbnNvbGUubG9nKCdtYWluQ3RybCcpO1xuICAkc2NvcGUuaXNMb2dnZWRJbiA9ICEhJHNlc3Npb25TdG9yYWdlLmN1cnJlbnRVc2VyO1xuICAkc2NvcGUuJHdhdGNoKGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiAkc2Vzc2lvblN0b3JhZ2UuY3VycmVudFVzZXI7XG4gIH0sIGZ1bmN0aW9uKG5ld1ZhbCwgb2xkVmFsKSB7XG4gICAgJHNjb3BlLmlzTG9nZ2VkSW4gPSAhIW5ld1ZhbDtcbiAgfSk7XG5cbiAgJHNjb3BlLmxvZ091dCA9ICgpID0+IHtcbiAgICBVc2VyLmxvZ291dCgpXG4gICAgICAudGhlbihyZXMgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhyZXMpO1xuICAgICAgICAkc2Vzc2lvblN0b3JhZ2UuY3VycmVudFVzZXIgPSBudWxsO1xuICAgICAgICAkc3RhdGUuZ28oJ2hvbWUnKTtcbiAgICAgIH0pO1xuICB9XG59KTtcblxuYXBwLmNvbnRyb2xsZXIoJ2hvbWVDdHJsJywgZnVuY3Rpb24oJHNjb3BlLCBVc2VyLCAkc3RhdGUpIHtcbiAgY29uc29sZS5sb2coJ2hvbWVDdHJsJyk7XG59KTtcblxuYXBwLmNvbnRyb2xsZXIoJ3JlZ0N0cmwnLCBmdW5jdGlvbigkc2NvcGUsIFVzZXIsICRzdGF0ZSwgJHRpbWVvdXQpIHtcbiAgY29uc29sZS5sb2coJ3JlZ0N0cmwnKTtcbiAgJHNjb3BlLnJlZ2lzdHJhdGlvbiA9IHt9O1xuICAkc2NvcGUuc3VjY2VzcyA9IGZhbHNlO1xuICAkc2NvcGUucGFzc3dvcmRzTm90TWF0Y2ggPSBmYWxzZTtcbiAgJHNjb3BlLnJlZ2lzdGVyID0gKCkgPT4ge1xuICAgIGlmKCRzY29wZS5yZWdpc3RyYXRpb24ucGFzc3dvcmQxICE9PSAkc2NvcGUucmVnaXN0cmF0aW9uLnBhc3N3b3JkMikgcmV0dXJuICRzY29wZS5wYXNzd29yZHNOb3RNYXRjaCA9IHRydWU7XG4gICAgdmFyIG5ld1VzZXIgPSB7XG4gICAgICBlbWFpbDogJHNjb3BlLnJlZ2lzdHJhdGlvbi5lbWFpbCxcbiAgICAgIHBhc3N3b3JkOiAkc2NvcGUucmVnaXN0cmF0aW9uLnBhc3N3b3JkMVxuICAgIH1cbiAgICAkc2NvcGUuc3VjY2VzcyA9IHRydWU7XG4gICAgVXNlci5zaWdudXAobmV3VXNlcilcbiAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgICAkc3RhdGUuZ28oJ2xvZ2luJylcbiAgICAgIH0pXG4gIH1cbn0pO1xuXG5hcHAuY29udHJvbGxlcignbG9naW5DdHJsJywgZnVuY3Rpb24oJHNjb3BlLCBVc2VyLCAkc3RhdGUsICRzZXNzaW9uU3RvcmFnZSkge1xuICBjb25zb2xlLmxvZygnbG9naW5DdHJsJyk7XG4gICRzY29wZS5jcmVkZW50aWFscyA9IHt9O1xuICAkc2NvcGUubG9naW4gPSAoKSA9PiB7XG4gICAgVXNlci5sb2dpbigkc2NvcGUuY3JlZGVudGlhbHMpXG4gICAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgJHN0YXRlLmdvKCdwcm9maWxlJyk7XG4gICAgICAgICAgfSk7XG4gIH1cbn0pO1xuXG5hcHAuY29udHJvbGxlcigncHJvZmlsZUN0cmwnLCBmdW5jdGlvbigkc2NvcGUsIFVzZXIsICRzdGF0ZSwgJHNlc3Npb25TdG9yYWdlKSB7XG4gIGNvbnNvbGUubG9nKCdwcm9maWxlQ3RybCcpO1xuICAkc2NvcGUudXNlciA9IHt9O1xuICBVc2VyLmdldFBlcnNvbigkc2Vzc2lvblN0b3JhZ2UuY3VycmVudFVzZXIpXG4gICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgJHNjb3BlLnVzZXIgPSByZXMuZGF0YTtcbiAgICB9KVxuICAkc2NvcGUuZWRpdFByb2ZpbGUgPSAoKSA9PiB7XG4gICAgJHN0YXRlLmdvKCdlZGl0UHJvZmlsZScpO1xuICB9XG59KTtcblxuYXBwLmNvbnRyb2xsZXIoJ2VkaXRQcm9maWxlQ3RybCcsIGZ1bmN0aW9uKCRzY29wZSwgVXNlciwgJHN0YXRlLCAkc2Vzc2lvblN0b3JhZ2UpIHtcbiAgY29uc29sZS5sb2coJ2VkaXRQcm9maWxlQ3RybCcpO1xuICAkc2NvcGUuZWRpdGluZyA9IHt9O1xuICBVc2VyLmdldFBlcnNvbigkc2Vzc2lvblN0b3JhZ2UuY3VycmVudFVzZXIpXG4gICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgJHNjb3BlLmVkaXRpbmcgPSByZXMuZGF0YTtcbiAgICB9KVxuICAkc2NvcGUuY2FuY2VsID0gKCkgPT4ge1xuICAgICRzdGF0ZS5nbygncHJvZmlsZScpO1xuICB9XG5cbiAgJHNjb3BlLnNhdmUgPSAoKSA9PiB7XG4gICAgaWYoJHNjb3BlLmVkaXRpbmcucGFzc3dvcmQxICE9PSAkc2NvcGUuZWRpdGluZy5wYXNzd29yZDIpIHJldHVybjtcbiAgICB2YXIgbmV3VXNlcjtcbiAgICBpZigkc2NvcGUuZWRpdGluZy5wYXNzd29yZDEgIT09IHVuZGVmaW5lZCkge1xuICAgICAgbmV3VXNlciA9IHtcbiAgICAgICAgZW1haWw6ICRzY29wZS5lZGl0aW5nLmVtYWlsLFxuICAgICAgICBwYXNzd29yZDogJHNjb3BlLmVkaXRpbmcucGFzc3dvcmQxXG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIG5ld1VzZXIgPSB7XG4gICAgICAgIGVtYWlsOiAkc2NvcGUuZWRpdGluZy5lbWFpbFxuICAgICAgfVxuICAgIH1cbiAgICBVc2VyLmVkaXRwcm9maWxlKG5ld1VzZXIpXG4gICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgIFVzZXIubG9nb3V0KClcbiAgICAgICAgICAudGhlbihyZXMgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKTtcbiAgICAgICAgICAgICRzZXNzaW9uU3RvcmFnZS5jdXJyZW50VXNlciA9IG51bGw7XG4gICAgICAgICAgICAkc3RhdGUuZ28oJ2hvbWUnKTtcbiAgICAgICAgICB9KTtcbiAgICB9KVxuICB9XG59KTtcblxuYXBwLmNvbnRyb2xsZXIoJ215QmVlcnNDdHJsJywgZnVuY3Rpb24oJHNjb3BlLCBVc2VyLCAkc3RhdGUsICRzZXNzaW9uU3RvcmFnZSwgU3RvcmVEYXRhKSB7XG4gIGNvbnNvbGUubG9nKCdteUJlZXJzQ3RybCcpO1xuICAkc2NvcGUuYmVlcnMgPSB7fTtcbiAgVXNlci5nZXRQZXJzb24oJHNlc3Npb25TdG9yYWdlLmN1cnJlbnRVc2VyKVxuICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICRzY29wZS5iZWVycyA9IHJlcy5kYXRhLnJhdGluZ3M7XG4gICAgICBjb25zb2xlLmxvZygkc2NvcGUuYmVlcnMpO1xuICAgICAgJHNjb3BlLmJlZXJzID0gJHNjb3BlLmJlZXJzLmZpbHRlcigoYmVlcikgPT4ge1xuICAgICAgICByZXR1cm4gYmVlci5zY29yZSAhPT0gdW5kZWZpbmVkO1xuICAgICAgfSlcbiAgICB9KVxuICAkc2NvcGUuZGVsZXRlUmF0aW5nID0gKGlkKSA9PiB7XG4gICAgVXNlci5kZWxldGVSYXRpbmcoaWQpXG4gICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgIFVzZXIuZ2V0UGVyc29uKCRzZXNzaW9uU3RvcmFnZS5jdXJyZW50VXNlcilcbiAgICAgICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgICAgICAkc2NvcGUuYmVlcnMgPSByZXMuZGF0YS5yYXRpbmdzO1xuICAgICAgICAgICAgY29uc29sZS5sb2coJHNjb3BlLmJlZXJzKTtcbiAgICAgICAgICAgICRzY29wZS5iZWVycyA9ICRzY29wZS5iZWVycy5maWx0ZXIoKGJlZXIpID0+IHtcbiAgICAgICAgICAgICAgcmV0dXJuIGJlZXIuc2NvcmUgIT09IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgfSlcbiAgICAgIH0pXG4gIH1cblxuICAkc2NvcGUuc29ydEJ5ID0gKG9yZGVyKSA9PiB7XG4gICAgaWYoJHNjb3BlLnNvcnRPcmRlciA9PT0gb3JkZXIpIHtcbiAgICAgICRzY29wZS5zb3J0T3JkZXIgPSBcIi1cIiArIG9yZGVyO1xuICAgIH0gZWxzZSB7XG4gICAgICAkc2NvcGUuc29ydE9yZGVyID0gb3JkZXI7XG4gICAgfVxuICB9O1xuXG4gICRzY29wZS5lZGl0UmF0aW5nID0gKGlkLCBzY29yZSwgY29tbWVudCkgPT4ge1xuICAgIFN0b3JlRGF0YS5zZXQoeydlZGl0ZWQnOiB0cnVlLCBcImxvYWRcIjogeyBcInNjb3JlXCI6IHNjb3JlLCBcImNvbW1lbnRcIjogY29tbWVudCB9fSk7XG4gICAgJHN0YXRlLmdvKCdyZXZpZXdzcGVjaWZpYycsIHsgXCJpZFwiOiBpZCB9KTtcbiAgfVxufSk7XG5cbmFwcC5jb250cm9sbGVyKCdhbGxCZWVyc0N0cmwnLCBmdW5jdGlvbigkc2NvcGUsIFVzZXIsICRzdGF0ZSwgJHNlc3Npb25TdG9yYWdlKSB7XG4gIGNvbnNvbGUubG9nKCdhbGxCZWVyc0N0cmwnKTtcbiAgJHNjb3BlLm5vdFNhbXBsZWQgPSBbXTtcblxuICAkc2NvcGUuc3RhcnRyZXZpZXcgPSAoKSA9PiB7XG4gICAgJHN0YXRlLmdvKCdyZXZpZXcnKTtcbiAgfVxuXG4gICRzY29wZS5yZXZpZXdUaGlzID0gKGlkKSA9PiB7XG4gICAgJHN0YXRlLmdvKCdyZXZpZXdzcGVjaWZpYycsIHsgXCJpZFwiOiBpZCB9KTtcbiAgfVxuXG4gIFVzZXIuZ2V0Tm90U2FtcGxlZCgpXG4gICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgJHNjb3BlLm5vdFNhbXBsZWQgPSByZXMuZGF0YTtcbiAgICB9KVxufSk7XG5cbmFwcC5jb250cm9sbGVyKCdyZXZpZXdDdHJsJywgZnVuY3Rpb24oJHNjb3BlLCBVc2VyLCAkc3RhdGUsICRzZXNzaW9uU3RvcmFnZSwgQmVlckFQSSkge1xuICBjb25zb2xlLmxvZygncmV2aWV3Q3RybCcpO1xuICAkc2NvcGUuYmVlciA9IHt9O1xuICAkc2NvcGUubG9hZGluZyA9IHRydWU7XG4gICRzY29wZS5yYXRpbmcgPSB7fTtcbiAgQmVlckFQSS5nZXRSYW5kb20oKVxuICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICRzY29wZS5iZWVyID0gcmVzLmRhdGE7XG4gICAgICAkc2NvcGUubG9hZGluZyA9IGZhbHNlO1xuICAgIH0pXG4gICRzY29wZS5yYXRlID0gKCkgPT4ge1xuICAgIHZhciByYXRpbmdPYmogPSB7XG4gICAgICBiZWVySWQ6ICRzY29wZS5iZWVyLmlkLFxuICAgICAgYmVlck5hbWU6ICRzY29wZS5iZWVyLm5hbWUsXG4gICAgICBzY29yZTogJHNjb3BlLnJhdGluZy5zY29yZSxcbiAgICAgIGNvbW1lbnQ6ICRzY29wZS5yYXRpbmcuY29tbWVudFxuICAgIH1cbiAgICBVc2VyLmFkZFJhdGluZyhyYXRpbmdPYmopXG4gICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgICRzY29wZS5sb2FkaW5nID0gdHJ1ZTtcbiAgICAgICAgQmVlckFQSS5nZXRSYW5kb20oKVxuICAgICAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgICAgICRzY29wZS5iZWVyID0gcmVzLmRhdGE7XG4gICAgICAgICAgICAkc2NvcGUubG9hZGluZyA9IGZhbHNlO1xuICAgICAgICAgIH0pXG4gICAgICB9KVxuICB9XG5cbiAgJHNjb3BlLm5vdHNhbXBsZWQgPSAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ3doaGFhYXQnKTtcbiAgICB2YXIgcmF0aW5nT2JqID0ge1xuICAgICAgYmVlcklkOiAkc2NvcGUuYmVlci5pZCxcbiAgICAgIGJlZXJOYW1lOiAkc2NvcGUuYmVlci5uYW1lLFxuICAgICAgc2NvcmU6IHVuZGVmaW5lZCxcbiAgICAgIGNvbW1lbnQ6IHVuZGVmaW5lZFxuICAgIH1cbiAgICBVc2VyLmFkZFJhdGluZyhyYXRpbmdPYmopXG4gICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgICRzY29wZS5sb2FkaW5nID0gdHJ1ZTtcbiAgICAgICAgQmVlckFQSS5nZXRSYW5kb20oKVxuICAgICAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgICAgICRzY29wZS5iZWVyID0gcmVzLmRhdGE7XG4gICAgICAgICAgICAkc2NvcGUubG9hZGluZyA9IGZhbHNlO1xuICAgICAgICAgIH0pXG4gICAgICB9KVxuICB9XG5cbn0pO1xuYXBwLmNvbnRyb2xsZXIoJ3Jldmlld3NwZWNpZmljQ3RybCcsIGZ1bmN0aW9uKCRzY29wZSwgVXNlciwgJHN0YXRlLCAkc2Vzc2lvblN0b3JhZ2UsIEJlZXJBUEksICRzdGF0ZVBhcmFtcywgU3RvcmVEYXRhKSB7XG4gIGNvbnNvbGUubG9nKCdyZXZpZXdzcGVjaWZpY0N0cmwnKTtcbiAgJHNjb3BlLmJlZXIgPSB7fTtcbiAgJHNjb3BlLmxvYWRpbmcgPSB0cnVlO1xuICAkc2NvcGUucmF0aW5nID0ge307XG5cbiAgQmVlckFQSS5nZXRCeUlkKCRzdGF0ZVBhcmFtcy5pZClcbiAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAkc2NvcGUuYmVlciA9IHJlcy5kYXRhO1xuICAgICAgJHNjb3BlLmxvYWRpbmcgPSBmYWxzZTtcbiAgICAgIHZhciBpbmZvID0gU3RvcmVEYXRhLmdldCgpO1xuICAgICAgaWYoaW5mby5lZGl0ZWQpIHtcbiAgICAgICAgY29uc29sZS5sb2coaW5mby5sb2FkLnNjb3JlKTtcbiAgICAgICAgJHNjb3BlLnJhdGluZy5zY29yZSA9IGluZm8ubG9hZC5zY29yZTtcbiAgICAgICAgJHNjb3BlLnJhdGluZy5jb21tZW50ID0gaW5mby5sb2FkLmNvbW1lbnQ7XG4gICAgICB9XG4gICAgfSlcblxuXG4gICRzY29wZS5yYXRlID0gKCkgPT4ge1xuICAgIHZhciByYXRpbmdPYmogPSB7XG4gICAgICBiZWVySWQ6ICRzY29wZS5iZWVyLmlkLFxuICAgICAgYmVlck5hbWU6ICRzY29wZS5iZWVyLm5hbWUsXG4gICAgICBzY29yZTogJHNjb3BlLnJhdGluZy5zY29yZSxcbiAgICAgIGNvbW1lbnQ6ICRzY29wZS5yYXRpbmcuY29tbWVudFxuICAgIH1cbiAgICBVc2VyLmFkZFJhdGluZ1RvU3BlY2lmaWMocmF0aW5nT2JqLmJlZXJJZCwgcmF0aW5nT2JqKVxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICB2YXIgaW5mbyA9IFN0b3JlRGF0YS5nZXQoKTtcblxuICAgICAgICBpZihpbmZvLmVkaXRlZCkgcmV0dXJuICRzdGF0ZS5nbygnbXlCZWVycycpO1xuICAgICAgICAkc3RhdGUuZ28oJ2FsbEJlZXJzJylcbiAgICAgIH0pXG4gIH1cblxuICAkc2NvcGUubm90c2FtcGxlZCA9ICgpID0+IHtcbiAgICAkc3RhdGUuZ28oJ2FsbEJlZXJzJylcbiAgfVxuXG59KTsiLCIndXNlIHN0cmljdCc7XG5cbnZhciBhcHAgPSBhbmd1bGFyLm1vZHVsZSgnYmVlckFwcCcpO1xuXG5hcHAuc2VydmljZSgnVXNlcicsIGZ1bmN0aW9uKCRodHRwLCAkc2Vzc2lvblN0b3JhZ2UpIHtcblxuICB0aGlzLnNpZ251cCA9IChuZXdVc2VyT2JqKSA9PiB7XG4gICAgcmV0dXJuICRodHRwLnBvc3QoJy4vYXBpL3VzZXJzL3JlZ2lzdGVyJywgbmV3VXNlck9iaik7XG4gIH1cblxuICB0aGlzLmxvZ2luID0gKGxvZ2luRGV0YWlsc09iaikgPT4ge1xuICAgIHJldHVybiAkaHR0cC5wb3N0KCcuL2FwaS91c2Vycy9sb2dpbicsIGxvZ2luRGV0YWlsc09iailcbiAgICAgICAgICAgICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpO1xuICAgICAgICAgICAgICAgICAgJHNlc3Npb25TdG9yYWdlLmN1cnJlbnRVc2VyID0gcmVzLmRhdGE7XG4gICAgICAgICAgICAgICAgfSk7XG4gIH1cbiAgdGhpcy5sb2dvdXQgPSAobG9naW5EZXRhaWxzT2JqKSA9PiB7XG4gICAgcmV0dXJuICRodHRwLmRlbGV0ZSgnLi9hcGkvdXNlcnMvbG9nb3V0JywgbG9naW5EZXRhaWxzT2JqKTtcbiAgfVxuXG4gIHRoaXMubG9hZHByb2ZpbGUgPSAoKSA9PiB7XG4gICAgcmV0dXJuICRodHRwLmdldCgnLi9hcGkvdXNlcnMvcHJvZmlsZScpO1xuICB9XG5cbiAgdGhpcy5lZGl0cHJvZmlsZSA9IChlZGl0ZWRVc2VyT2JqKSA9PiB7XG4gICAgcmV0dXJuICRodHRwLnB1dCgnLi9hcGkvdXNlcnMvcHJvZmlsZScsIGVkaXRlZFVzZXJPYmopO1xuICB9XG5cbiAgdGhpcy5nZXRQZW9wbGUgPSAoKSA9PiB7XG4gICAgcmV0dXJuICRodHRwLmdldCgnLi9hcGkvdXNlcnMvcGVvcGxlJyk7XG4gIH1cblxuICB0aGlzLmdldFBlcnNvbiA9IChpZCkgPT4ge1xuICAgIHJldHVybiAkaHR0cC5nZXQoJy4vYXBpL3VzZXJzL3Blb3BsZS8nICsgaWQpO1xuICB9XG5cbiAgdGhpcy5hZGRSYXRpbmcgPSAocmF0aW5nT2JqKSA9PiB7XG4gICAgcmV0dXJuICRodHRwLnBvc3QoJy4vYXBpL3VzZXJzL2FkZFJhdGluZy8nLCByYXRpbmdPYmopO1xuICB9XG5cbiAgdGhpcy5kZWxldGVSYXRpbmcgPSAoaWQpID0+IHtcbiAgICByZXR1cm4gJGh0dHAuZGVsZXRlKCcuL2FwaS91c2Vycy9kZWxldGVSYXRpbmcvJyArIGlkKTtcbiAgfVxuXG4gIHRoaXMuYWRkUmF0aW5nVG9TcGVjaWZpYyA9IChiZWVySWQsIG9iaikgPT4ge1xuICAgIHJldHVybiAkaHR0cC5wb3N0KCcuL2FwaS91c2Vycy9hZGRSYXRpbmdUb1NwZWNpZmljLycgKyBiZWVySWQsIG9iaik7XG4gIH1cblxuICB0aGlzLmdldE5vdFNhbXBsZWQgPSAoKSA9PiB7XG4gICAgcmV0dXJuICRodHRwLmdldCgnLi9hcGkvdXNlcnMvZ2V0Tm90U2FtcGxlZCcpO1xuICB9XG5cbn0pXG5cbmFwcC5zZXJ2aWNlKCdCZWVyQVBJJywgZnVuY3Rpb24oJGh0dHApIHtcblxuICB0aGlzLmdldFJhbmRvbSA9ICgpID0+IHtcbiAgICByZXR1cm4gJGh0dHAuZ2V0KFwiLi9hcGkvYmVlcnMvZ2V0UmFuZG9tXCIpO1xuICB9XG5cbiAgdGhpcy5nZXRCeUlkID0gKGlkKSA9PiB7XG4gICAgcmV0dXJuICRodHRwLmdldChcIi4vYXBpL2JlZXJzL2dldEJ5SWQvXCIgKyBpZCk7XG4gIH1cblxufSlcblxuYXBwLnNlcnZpY2UoJ1N0b3JlRGF0YScsIGZ1bmN0aW9uKCkge1xuICB2YXIgc3RvcmVEYXRhID0ge307XG4gIHRoaXMuZ2V0ID0gKCkgPT4geyByZXR1cm4gc3RvcmVEYXRhIH1cbiAgdGhpcy5zZXQgPSAoZGF0YSkgPT4geyBzdG9yZURhdGEgPSBkYXRhIH1cbn0pIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
